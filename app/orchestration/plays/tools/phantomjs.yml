---
- name: "PHANTOMJS: Check if software is installed"
  stat:
    path: "{{ phantomjs_binary }}"
  register: phantomjs

- name: "PHANTOMJS: Check if software can be updated"
  command: phantomjs --version
  register: phantomjs_update
  when: phantomjs.stat.exists == true
  changed_when: phantomjs_update.stdout != phantomjs_stable_version

- name: "PHANTOMJS: Check if archive exists"
  stat:
    path: phantomjs-{{ phantomjs_stable_version }}-linux-x86_64.tar.bz2
  register: phantomjs_archive

- name: "PHANTOMJS: Copy latest release from mirror"
  get_url:
    url: "{{ phantomjs_mirror_download_link }}"
    dest: "{{ download_dir }}"
    validate_certs: no
  register: phantomjs_get_url_result
  until: "'OK' in phantomjs_get_url_result.msg"
  retries: 3
  delay: 10
  when: phantomjs.stat.exists == false or phantomjs_update.stdout != phantomjs_stable_version and phantomjs_archive.stat.exists == false

- name: "PHANTOMJS: Extract files"
  unarchive:
    src: "{{ phantomjs_archive_path }}"
    dest: "{{ download_dir }}"
    copy: no
  when: phantomjs.stat.exists == false or phantomjs_update.stdout != phantomjs_stable_version

- name: "PHANTOMJS: Delete outdated executable"
  file:
    path: "{{ phantomjs_binary }}"
    state: absent
  when: phantomjs.stat.exists == true and phantomjs_update.stdout != phantomjs_stable_version

- name: "PHANTOMJS: Install software globally"
  command: mv {{ phantomjs_temp_path }}/bin/phantomjs {{ user_programs_path }}
  when: phantomjs.stat.exists == false or phantomjs_update.stdout != phantomjs_stable_version

- name: "PHANTOMJS: Make binary executable"
  file:
    path: "{{ phantomjs_binary }}"
    mode: 0755
  when: phantomjs.stat.exists == false or phantomjs_update.stdout != phantomjs_stable_version

- name: "PHANTOMJS: Delete temporary directory"
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ phantomjs_temp_path }}"
    - "{{ phantomjs_archive_path }}"
  when: phantomjs.stat.exists == false or phantomjs_update.stdout != phantomjs_stable_version

# At some point we should think about transitioning over to Chromium's web
# driver. PhantomJS would thus no longer be needed.
- name: "SYSTEM: Install Chromium's web driver"
  package:
    name: chromium-driver
    state: present
    force: yes
