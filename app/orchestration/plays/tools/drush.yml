---
# Drush Launcher
- name: "DRUSH: Check if Launcher is installed"
  stat:
    path: "{{ drush_launcher }}"
  register: drush_launcher
  changed_when: drush_launcher.stat.exists == false

- name: "DRUSH: Check if Launcher needs to be updated"
  shell: drush --version| head -n1 | awk '{print $NF}'
  register: drush_launcher_stable_release_check
  when: drush_launcher.stat.exists == true
  changed_when: drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

- name: "DRUSH: Copy latest Launcher release from mirror"
  get_url:
    url: "{{ drush_launcher_mirror_download_link }}"
    dest: "{{ user_programs_path }}"
    mode: 0755
    validate_certs: no
  register: drush_launcher_get_url_result
  until: "'OK' in drush_launcher_get_url_result.msg"
  retries: 3
  delay: 10
  when: drush_launcher.stat.exists == false or drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

- name: "DRUSH: Rename Launcher PHAR file"
  command: mv {{ user_programs_path }}/{{ drush_launcher_archive_file }} {{ user_programs_path }}/drush
  when: drush_launcher.stat.exists == false or drush_launcher_stable_release_check.stdout != drush_launcher_stable_release

# Drush (installed globally)
- name: "DRUSH: Check if the global Drush is installed"
  stat:
    path: "{{ global_drush }}"
  register: global_drush_check
  changed_when: global_drush_check.stat.exists == false

- name: "DRUSH: Copy global-drush to $PATH"
  file:
    src: "{{ composer_dir_path }}/vendor/drush/drush/drush"
    dest: "{{ global_drush }}"
    state: link
  when: global_drush_check.stat.exists == false

- name: "DRUSH: Make sure the Launcher falls back to the global Drush"
  blockinfile:
    dest: "{{ bashrc }}"
    block: |
      export DRUSH_LAUNCHER_FALLBACK=`which global-drush`
    insertafter: EOF
    marker: "# {mark} MANAGED DRUSH LAUNCHER FALLBACK BLOCK"

- name: "DRUSH: Check if Drush's etc directory exists"
  stat:
    path: "{{ drush_etc_path }}"
  register: drush_etc_check
  changed_when: drush_etc_check.stat.exists == false

- name: "DRUSH: Create Drush's etc directory"
  file:
    path: "{{ drush_etc_path }}"
    state: directory
  when: drush_etc_check.stat.exists == false

- name: "DRUSH: Check if sites-aliases directory exists"
  stat:
    path: "{{ drush_alias_path }}"
  register: site_alias_check
  changed_when: site_alias_check.stat.exists == false

- name: "DRUSH: Create site-aliases directory"
  file:
    path: "{{ drush_alias_path }}"
    state: directory
  when: site_alias_check.stat.exists == false

- name: "DRUSH: Create .drush directory"
  file:
    path: "{{ drush_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user }}"
    group: "{{ user }}"
  when: site_alias_check.stat.exists == false

- name: "DRUSH: Check if drush.yml file exists"
  stat:
    path: "{{ drush_yml_source_file }}"
  register: drush_yml_check
  changed_when: drush_yml_check.stat.exists == false

- name: "DRUSH: Deploy drush.yml file"
  copy:
    src: "{{ drush_yml_source_file }}"
    dest: "{{ drush_dir }}"
    mode: 0644
  when: drush_yml_check.stat.exists == false
  ignore_errors: true
