---
- name: "XDEBUG: Check if the extension is installed"
  stat:
    path: "{{ xdebug_extension_path }}"
  register: xdebug

- name: "XDEBUG: Check if the extension can be updated"
  shell: ls {{ xdebug_archive_path }} | grep -o {{ xdebug_stable_release }} || echo "absent"
  register: xdebug_update
  when: xdebug.stat.exists == true
  changed_when: xdebug_update.stdout == "absent"

- name: "XDEBUG: Copy latest release from mirror"
  get_url:
    url: "{{ xdebug_mirror_download_link }}"
    dest: "{{ download_dir }}"
    validate_certs: no
  register: xdebug_get_url_result
  until: "'OK' in xdebug_get_url_result.msg"
  retries: 3
  delay: 10
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Extract files"
  unarchive:
    src: "{{ xdebug_archive_path }}"
    dest: "{{ download_dir }}"
    copy: no
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Compile the extension"
  command: "{{ item }} chdir={{ xdebug_unarchived_path }}"
  with_items:
    - /usr/bin/phpize
    - ./configure
    - /usr/bin/make
  register: compile_xdebug
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Copy compiled extension"
  command: cp {{ xdebug_unarchived_path }}/modules/{{ xdebug_extension_name }} {{ default_php_extensions }}
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Make sure permissions are correct"
  file:
    path: "{{ xdebug_extension_path }}"
    mode: 0644
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Delete temporary directory"
  file:
    path: "{{ xdebug_unarchived_path }}"
    state: absent
  when: xdebug.stat.exists == false or xdebug_update.stdout != xdebug_stable_release

- name: "XDEBUG: Check config in php.ini"
  shell: grep -o "{{ xdebug_extension_name }}" {{ default_php_ini }} || echo "absent"
  register: xdebug_config
  changed_when: xdebug_config.stdout == "absent"

- name: "XDEBUG: Configure extension in php.ini"
  blockinfile:
    dest: "{{ default_php_ini }}"
    block: |
      zend_extension = {{ xdebug_extension_path }}
      xdebug.remote_host={{ xdebug_remote_host }}
      xdebug.remote_port=9000
      xdebug.remote_enable=1
      xdebug.max_nesting_level=256
    marker: ; {mark} MANAGED XDEBUG BLOCK
  when: xdebug_config.stdout == "absent"
