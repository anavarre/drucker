---
- name: "CODE SNIFFER: Check if phpcs is globally installed"
  stat:
    path: "{{ phpcs_binary }}"
  register: phpcs

- name: "CODE SNIFFER: Check if phpcbf is globally installed"
  stat:
    path: "{{ phpcbf_binary }}"
  register: phpcbf

- name: "CODE SNIFFER: Check phpcs version"
  shell: phpcs --version | awk '{print $3}'
  register: phpcs_version
  when: phpcs.stat.exists == true
  changed_when: phpcs_version.stdout != phpcs_stable_release

- name: "CODE SNIFFER: Check phpcbf version"
  shell: phpcbf --version | awk '{print $3}'
  register: phpcbf_version
  when: phpcbf.stat.exists == true
  changed_when: phpcbf_version.stdout != phpcbf_stable_release

- name: "CODE SNIFFER: Copy latest phpcs release from mirror"
  get_url:
    url: "{{ phpcs_mirror_download_link }}"
    dest: "{{ download_dir }}"
    mode: 0755
    validate_certs: no
  register: phpcs_get_url_result
  until: "'OK' in phpcs_get_url_result.msg"
  retries: 3
  delay: 10
  when: phpcs.stat.exists == false or phpcs_version.stdout != phpcs_stable_release

- name: "CODE SNIFFER: Rename phpcs PHAR file"
  command: mv {{ phpcs_temp_phar }} {{ phpcs_temp_path }}
  when: phpcs.stat.exists == false or phpcs_version.stdout != phpcs_stable_release

- name: "CODE SNIFFER: Install phpcs globally"
  command: mv {{ phpcs_temp_path }} {{ user_programs_path }}
  when: phpcs.stat.exists == false or phpcs_version.stdout != phpcs_stable_release

- name: "CODE SNIFFER: Copy latest phpcbf release from mirror"
  get_url:
    url: "{{ phpcbf_mirror_download_link }}"
    dest: "{{ download_dir }}"
    mode: 0755
    validate_certs: no
  register: phpcbf_get_url_result
  until: "'OK' in phpcbf_get_url_result.msg"
  retries: 3
  delay: 10
  when: phpcbf.stat.exists == false or phpcbf_version.stdout != phpcbf_stable_release

- name: "CODE SNIFFER: Rename phpcbf PHAR file"
  command: mv {{ phpcbf_temp_phar }} {{ phpcbf_temp_path }}
  when: phpcbf.stat.exists == false or phpcbf_version.stdout != phpcbf_stable_release

- name: "CODE SNIFFER: Install phpcbf globally"
  command: mv {{ phpcbf_temp_path }} {{ user_programs_path }}
  when: phpcbf.stat.exists == false or phpcbf_version.stdout != phpcbf_stable_release
